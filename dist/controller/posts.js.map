{"version":3,"sources":["../../src/controller/posts.js"],"names":["config","db","api","post","req","res","newPost","title","body","content","save","err","send","json","message","get","find","posts","findById","params","id","put","delete","remove","_id"],"mappings":";;;;;;AAAA;;AACA;;;;;;AAGA;;;kBAGe,gBAAoB;AAAA,QAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,QAATC,EAAS,QAATA,EAAS;;AAC/B,QAAIC,MAAM,sBAAV;;AAEAA,QAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3B,YAAIC,UAAS,oBAAb;AACAA,gBAAQC,KAAR,GAAgBH,IAAII,IAAJ,CAASD,KAAzB;AACAD,gBAAQG,OAAR,GAAkBL,IAAII,IAAJ,CAASC,OAA3B;;AAEAH,gBAAQI,IAAR,CAAa,eAAO;AAChB,gBAAIC,GAAJ,EAAS;AACLN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAAS,EAAEC,SAAS,wBAAX,EAAT;AACH,SALD;AAMH,KAXD;;AAaAZ,QAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACX,GAAD,EAAMC,GAAN,EAAc;AACvB,uBAAKW,IAAL,CAAU,EAAV,EAAc,UAACL,GAAD,EAAMM,KAAN,EAAgB;AAC1B,gBAAIN,GAAJ,EAAS;AACLN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAASI,KAAT;AACH,SALD;AAMH,KAPD;;AASAf,QAAIa,GAAJ,CAAQ,MAAR,EAAgB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC1B,uBAAKa,QAAL,CAAcd,IAAIe,MAAJ,CAAWC,EAAzB,EAA6B,UAACT,GAAD,EAAMR,IAAN,EAAe;AACxC,gBAAIQ,GAAJ,EAAS;AACLN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAASV,IAAT;AACH,SALD;AAMH,KAPD;;AASAD,QAAImB,GAAJ,CAAQ,MAAR,EAAgB,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC1B,uBAAKa,QAAL,CAAcd,IAAIe,MAAJ,CAAWC,EAAzB,EAA6B,UAACT,GAAD,EAAMR,IAAN,EAAe;AACxC,gBAAIQ,GAAJ,EAAS;AACLN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDR,iBAAKI,KAAL,GAAaH,IAAII,IAAJ,CAASD,KAAtB;AACAJ,iBAAKO,IAAL,CAAU,eAAO;AACb,oBAAIC,GAAJ,EAAS;AACLN,wBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,oBAAIQ,IAAJ,CAAS,EAAEC,SAAS,cAAX,EAAT;AACH,aALD;AAMH,SAXD;AAYH,KAbD;;AAeAZ,QAAIoB,MAAJ,CAAW,MAAX,EAAmB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC7B,uBAAKkB,MAAL,CAAY;AACRC,iBAAKpB,IAAIe,MAAJ,CAAWC;AADR,SAAZ,EAEG,UAACT,GAAD,EAAMR,IAAN,EAAe;AACd,gBAAIQ,GAAJ,EAAS;AACLN,oBAAIO,IAAJ,CAASD,GAAT;AACH;AACDN,gBAAIQ,IAAJ,CAAS,EAAEC,SAAS,yBAAX,EAAT;AACH,SAPD;AAQH,KATD;;AAWA,WAAOZ,GAAP;AACH,C","file":"posts.js","sourcesContent":["import { Router } from 'express';\nimport Post from '../model/post';\n\n\n// import { authenticate } from '../middleware/authMiddleware';\n\n\nexport default ({ config, db }) => {\n    let api = Router();\n\n    api.post('/add', (req, res) => {\n        let newPost= new Post();\n        newPost.title = req.body.title;\n        newPost.content = req.body.content;\n\n        newPost.save(err => {\n            if (err) {\n                res.send(err);\n            }\n            res.json({ message: 'Post saved sucessfully' });\n        });\n    });\n\n    api.get('/', (req, res) => {\n        Post.find({}, (err, posts) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(posts);\n        });\n    });\n\n    api.get('/:id', (req, res) => {\n        Post.findById(req.params.id, (err, post) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json(post);\n        });\n    });\n\n    api.put('/:id', (req, res) => {\n        Post.findById(req.params.id, (err, post) => {\n            if (err) {\n                res.send(err);\n            }\n            post.title = req.body.title;\n            post.save(err => {\n                if (err) {\n                    res.send(err);\n                }\n                res.json({ message: \"Post updated\" });\n            });\n        });\n    });\n\n    api.delete('/:id', (req, res) => {\n        Post.remove({\n            _id: req.params.id\n        }, (err, post) => {\n            if (err) {\n                res.send(err);\n            }\n            res.json({ message: \"Post Succefully deleted\" })\n        });\n    });\n\n    return api;\n}\n"]}